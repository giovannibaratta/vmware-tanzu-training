---
- name: Configure Keycloak
  hosts: keycloak

  vars:
    # If you already know the supervisor VIP set the value, otherwise comment the variable
    supervisor_cp_vip: 172.16.100.11

  pre_tasks:
  - name: Set facts
    ansible.builtin.set_fact:
      # These variables are stored in the Conjur server. To be able to retrieve the variables, the Ansible host identity must be configured.
      # See README for more details.
      keycloak_admin_password: "{{ lookup('cyberark.conjur.conjur_variable', 'automation/keycloak/admin_pass', config_file='../conjur.conf', identity_file='../conjur.identity') }}"
      keycloak_server: "https://{{ ansible_default_ipv4.address  }}"

  tasks:
  - name: Create realm
    community.general.keycloak_realm:
      auth_keycloak_url: "{{ keycloak_server }}"
      auth_realm: master
      auth_username: admin
      auth_password: "{{ keycloak_admin_password }}"
      id: tanzu
      realm: tanzu
      state: present
      validate_certs: false
      enabled: true
    delegate_to: localhost

  - name: Create client
    community.general.keycloak_client:
      auth_keycloak_url: "{{ keycloak_server }}"
      auth_realm: master
      auth_username: admin
      auth_password: "{{ keycloak_admin_password }}"
      realm: tanzu
      client_id: oidc-auth
      name: oidc-auth
      protocol: "openid-connect"
      client_authenticator_type: "client-secret"
      enabled: true
      # Client authentication setting in the UI.
      # Public client false equals to confidential access type
      public_client: false
      # If the supervisor virtual ip is defined, we set the redirect uri to the pinniped callback, otherwise we don't se it.
      redirect_uris: "{{ (supervisor_cp_vip is defined) | ternary(['https://' + supervisor_cp_vip + '/wcp/pinniped/callback'], []) }}"
      state: present
      validate_certs: false
    delegate_to: localhost
