- name: Prepare host
  hosts: localhost
  connection: local
  become: true

  roles:
    - geerlingguy.docker

- name: Install & configure Harbor
  hosts: localhost
  gather_facts: false
  connection: local
  become: true

  vars_files:
    - ./vars.yaml

  tasks:
    - name: Create TLS folder
      ansible.builtin.file:
        path: "/harbor/tls/"
        state: directory
        mode: "0700"

    - name: Generate TLS artifacts
      when: harbor_base64_tls_key is undefined or harbor_base64_tls_cert is undefined
      block:
        # Create self-signed CA
        # https://docs.ansible.com/ansible/latest/collections/community/crypto/docsite/guide_ownca.html#set-up-the-ca
        - name: Create CA private key
          community.crypto.openssl_privatekey:
            path: /harbor/tls/ca.key

        - name: Create certificate signing request for CA certificate
          community.crypto.openssl_csr_pipe:
            privatekey_path: /harbor/tls/ca.key
            common_name: Harbor CA
            use_common_name_for_san: false
            basic_constraints:
              - "CA:TRUE"
            basic_constraints_critical: true
            key_usage:
              - keyCertSign
            key_usage_critical: true
          register: ca_csr

        - name: Create self-signed CA certificate from CSR
          community.crypto.x509_certificate:
            path: /harbor/tls/ca.pem
            csr_content: "{{ ca_csr.csr }}"
            privatekey_path: /harbor/tls/ca.key
            provider: selfsigned
            # It must be less than 825 days to work on newer MacOs versions
            selfsigned_not_after: "+730d"
            return_content: true
          register: harbor_ca_cert_task

        # Create Harbor key and certificate
        - name: Create Harbor private key
          community.crypto.openssl_privatekey:
            path: /harbor/tls/harbor.key
            format: "pkcs1"
            return_content: true
          register: harbor_private_key_task

        # Create CSR and sign it with the self-signed CA
        - name: Create Harbor certificate signing request (CSR)
          community.crypto.openssl_csr_pipe:
            privatekey_path: /harbor/tls/harbor.key
            common_name: "{{ harbor_hostname }}"
            subject_alt_name:
              - "DNS:{{ harbor_hostname }}"
          register: harbor_csr

        - name: Create Harbor certificate
          community.crypto.x509_certificate:
            path: /harbor/tls/harbor.pem
            csr_content: "{{ harbor_csr.csr }}"
            ownca_privatekey_path: /harbor/tls/ca.key
            ownca_path: /harbor/tls/ca.pem
            # It must be less than 825 days to work on newer MacOs versions
            ownca_not_after: "+365d"
            provider: ownca
            return_content: true
          register: harbor_cert_task
          notify:
            - Regenerate Harbor configs
            - Restart Harbor service

        - name: Set TLS facts using variables
          ansible.builtin.set_fact:
            harbor_tls_key: "{{ harbor_private_key_task.privatekey }}"
            harbor_tls_cert: "{{ harbor_cert_task.certificate }}"
            harbor_tls_ca_chain: "{{ harbor_ca_cert_task.certificate }}"

    - name: Extract TLS artifacts from variables
      when: harbor_base64_tls_key is defined and harbor_base64_tls_cert is defined
      block:
        - name: Set TLS facts using variables
          ansible.builtin.set_fact:
            harbor_tls_key: "{{ harbor_base64_tls_key | b64decode }}"
            harbor_tls_cert: "{{ harbor_base64_tls_cert | b64decode }}"
            harbor_tls_ca_chain: '{{ harbor_base64_tls_ca_chain | default(None) | b64decode or "" }}'

    # Copy certificate and private key in the all the required folders
    - name: Create Docker cert folder
      ansible.builtin.file:
        path: "/etc/docker/certs.d/{{ harbor_hostname }}/"
        state: directory
        mode: "0755"

    - name: Create /data folder
      ansible.builtin.file:
        path: "/data"
        state: directory
        mode: "0755"

    - name: Create /data/cert folder
      ansible.builtin.file:
        path: "/data/cert"
        state: directory
        mode: "0755"

    - name: Create /data/ca_download folder
      ansible.builtin.file:
        path: "/data/ca_download"
        state: directory
        mode: "0755"

    - name: Copy Harbor private key to Docker certs
      ansible.builtin.template:
        src: "templates/harbor-tls-key.j2"
        dest: "/etc/docker/certs.d/{{ harbor_hostname }}/{{ harbor_hostname}}.key"

    - name: Copy Harbor certificate to Docker certs
      ansible.builtin.template:
        src: "templates/harbor-tls-certificate.j2"
        dest: "/etc/docker/certs.d/{{ harbor_hostname }}/{{ harbor_hostname}}.pem"

    - name: Copy CA certificate
      ansible.builtin.template:
        src: "templates/harbor-tls-ca-chain.j2"
        dest: "/etc/docker/certs.d/{{ harbor_hostname }}/ca.pem"

    - name: Copy Harbor private key to data volume
      ansible.builtin.template:
        src: "templates/harbor-tls-key.j2"
        dest: "/data/cert/{{ harbor_hostname}}.key"

    - name: Copy Harbor certificate to data volume
      ansible.builtin.template:
        src: "templates/harbor-tls-certificate.j2"
        dest: "/data/cert/{{ harbor_hostname}}.pem"

    - name: Copy CA to data volume
      ansible.builtin.template:
        src: "templates/harbor-tls-ca-chain.j2"
        dest: "/data/ca_download/ca.crt"

    - name: Copy Harbor config
      ansible.builtin.copy:
        src: "/ansible/harbor-config.yml"
        dest: "/harbor/harbor.yml"
      notify:
        - Regenerate Harbor configs
        - Restart Harbor service

    - name: Copy Harbor service
      ansible.builtin.copy:
        src: "templates/harbor-systemd.service"
        dest: "/etc/systemd/system/harbor.service"
      notify:
        - Regenerate Harbor configs
        - Restart Harbor service

    - name: Check if Harbor is already installed
      ansible.builtin.shell:
        cmd: docker compose ls | grep harbor
      register: harbor_installed
      ignore_errors: true

    - name: Install Harbor
      when: harbor_installed.rc == 1
      block:
        - name: Download install script
          ansible.builtin.get_url:
            url: "https://github.com/goharbor/harbor/releases/download/v2.10.0/harbor-offline-installer-v2.10.0.tgz"
            dest: /tmp/harbor.tgz
            checksum: md5:a63bba7a1d820dc27a5caaa4a9ff3721

        - name: Extract archive
          ansible.builtin.unarchive:
            remote_src: true
            src: /tmp/harbor.tgz
            dest: /

        - name: Install harbor
          ansible.builtin.shell:
            cmd: /harbor/install.sh --with-trivy

    # The service file is copied via cloud-init
    - name: Start Harbor service
      ansible.builtin.systemd:
        name: harbor
        state: started
        enabled: true

  handlers:
    - name: Regenerate Harbor configs
      ansible.builtin.shell:
        cmd: /harbor/prepare

    - name: Restart Harbor service
      ansible.builtin.systemd:
        daemon_reload: true
        name: harbor
        state: restarted
