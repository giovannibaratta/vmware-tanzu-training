---
- name: Prepare host
  hosts: localhost
  connection: local
  become: true

  pre_tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        update_cache: yes
        pkg:
        - "openjdk-17-jdk"
        - "postgresql-14"

    - name: Add the Keycloak user
      ansible.builtin.user:
        name: keycloak

- name: Install and configure Keycloak
  hosts: localhost
  connection: local
  become: true

  vars:
    keycloak_version: "22.0.5"
    #Â Root directory used for Keycloak installation
    keycloak_dir: "/opt/keycloak"
    keycloak_db_password: ${keycloak_db_password}
    keycloak_admin_password: ${keycloak_admin_password}

  pre_tasks:
    - name: Retrieve hostname
      shell: "hostname -f"
      register: hostname_command

    - name: Set fact
      ansible.builtin.set_fact:
        keycloak_fqdn: "{{ hostname_command.stdout }}"

  tasks:
  - name: Install Keycloak
    block:
    - name: Download install script
      ansible.builtin.get_url:
        url: "https://github.com/keycloak/keycloak/releases/download/{{ keycloak_version }}/keycloak-{{ keycloak_version }}.tar.gz"
        dest: /tmp/keycloak.tag.gz
        checksum: sha1:2526daf942086f7700f2cd43d592505ce6b96f3a

    - name: Extract archive
      ansible.builtin.unarchive:
        remote_src: true
        src: /tmp/keycloak.tag.gz
        dest: /tmp/

    - name: Create Keycloak dirs
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: keycloak
        group: keycloak
      with_items:
        - "{{ keycloak_dir }}"
        - "{{ keycloak_dir }}/conf"
        - "{{ keycloak_dir }}/tls"
        - "{{ keycloak_dir }}/providers"
        - "/var/log/keycloak"

    - name: Move files
      ansible.builtin.copy:
        src: "/tmp/keycloak-{{keycloak_version}}/{{ item }}"
        dest: "{{ keycloak_dir }}/{{ item }}"
        remote_src: true
        owner: keycloak
        group: keycloak
      with_items:
        - "bin/"
        - "lib/"
        - "conf/cache-ispn.xml"

  - name: Copy Keycloak configuration file
    ansible.builtin.template:
      src: "templates/keycloak.conf.j2"
      dest: "{{ keycloak_dir }}/conf/keycloak.conf"
    notify:
      - Restart Keycloak service

  - name: Create TLS folder
    ansible.builtin.file:
      path: "/ansible/tls/"
      state: directory
      mode: '0700'

  # Create self-signed CA
  # https://docs.ansible.com/ansible/latest/collections/community/crypto/docsite/guide_ownca.html#set-up-the-ca
  - name: Create CA private key
    community.crypto.openssl_privatekey:
      path: /ansible/tls/ca.key

  - name: Create certificate signing request for CA certificate
    community.crypto.openssl_csr_pipe:
      privatekey_path: /ansible/tls/ca.key
      common_name: Keycloak CA
      use_common_name_for_san: false
      basic_constraints:
        - 'CA:TRUE'
      basic_constraints_critical: true
      key_usage:
        - keyCertSign
      key_usage_critical: true
    register: ca_csr

  - name: Create self-signed CA certificate from CSR
    community.crypto.x509_certificate:
      path: /ansible/tls/ca.pem
      csr_content: "{{ ca_csr.csr }}"
      privatekey_path: /ansible/tls/ca.key
      provider: selfsigned
      return_content: true
    register: keycloak_ca_cert_task

  # Create Keycloak certificate
  - name: Create Keycloak private key
    community.crypto.openssl_privatekey:
      path: /ansible/tls/keycloak.key

  # Create CSR and sign it with the self-signed cA
  - name: Create Keycloak certificate signing request (CSR)
    community.crypto.openssl_csr_pipe:
      privatekey_path: /ansible/tls/keycloak.key
      common_name: "{{ keycloak_fqdn }}"
      subject_alt_name:
        - "DNS:{{ keycloak_fqdn }}"
    register: keycloak_csr

  - name: Create Keycloak certificate
    community.crypto.x509_certificate:
      path: /ansible/tls/keycloak.pem
      csr_content: "{{ keycloak_csr.csr }}"
      ownca_privatekey_path: /ansible/tls/ca.key
      ownca_path: /ansible/tls/ca.pem
      provider: ownca
      return_content: true
    register: keycloak_cert_task

  - name: Copy TLS private key
    ansible.builtin.copy:
      src: "/ansible/tls/keycloak.key"
      dest: "{{ keycloak_dir }}/tls/key.pem"
      remote_src: true
      owner: keycloak
      group: keycloak
    notify:
      - Restart Keycloak service

  - name: Set facts for tls template
    ansible.builtin.set_fact:
      keycloak_tls_cert: "{{ keycloak_cert_task.certificate }}"
      keycloak_tls_ca_chain: "{{ keycloak_ca_cert_task.certificate }}"

  - name: Copy TLS certificate
    ansible.builtin.template:
      src: "templates/keycloak-tls-fullchain.j2"
      dest: "{{ keycloak_dir }}/tls/cert.pem"
      owner: keycloak
      group: keycloak
    notify:
      - Restart Keycloak service

  - name: Start PostgreSQL service
    ansible.builtin.systemd:
      name: postgresql
      state: started
      enabled: true

  - name: Create a keycloak database
    become: true
    become_user: postgres
    community.postgresql.postgresql_db:
      name: keycloak

  - name: Add user to keycloak database
    become: true
    become_user: postgres
    community.postgresql.postgresql_user:
      db: keycloak
      name: keycloak
      password: "{{ keycloak_db_password }}"

  - name: Grant privileges to keycloak on public schema in keycloak database
    become: true
    become_user: postgres
    community.postgresql.postgresql_privs:
      db: keycloak
      privs: ALL
      type: schema
      obj: public
      role: keycloak

  - name: Add capabilities to bind to 443
    community.general.capabilities:
      path: "/usr/lib/jvm/java-17-openjdk-amd64/bin/java"
      capability: cap_net_bind_service=+eip
      state: present

  # The file is referenced in the systemd unit service
  - name: Generate environment file
    ansible.builtin.template:
      src: "templates/keycloak-environment.j2"
      dest: "{{ keycloak_dir }}/environment"

  - name: Generate Keycloak service
    become: true
    ansible.builtin.template:
      src: "templates/keycloak.service.j2"
      dest: "/etc/systemd/system/keycloak.service"
    notify:
      - Restart Keycloak service

  - name: Start Keycloak service
    ansible.builtin.systemd:
      daemon_reload: true
      name: keycloak
      state: started
      enabled: true
    register: start_keycloak_service

  handlers:
  - name: Restart Keycloak service
    when: not start_keycloak_service.changed
    ansible.builtin.systemd:
      daemon_reload: true
      name: keycloak
      state: restarted
