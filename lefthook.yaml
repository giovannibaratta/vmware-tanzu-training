assert_lefthook_installed: true
min_version: 1.5.5

pre-push:
  parallel: true
  scripts:
    "validate-root-readme.sh":
      runner: bash

pre-commit:
  parallel: true
  commands:
    check-broken-link:
      glob: "*.md"
      run: |
        command=""

        if which docker 2>&1 > /dev/null; then
          echo "Docker found"
          command="docker"
        fi

        if [[ "$command" == "" ]] && which podman 2>&1 > /dev/null; then
          echo "Podman found"
          command="podman"
        fi

        if  [[ "$command" == "" ]]; then
          echo "No container runtime found"
          exit 1
        fi

        files_to_scan=()

        # Prefix files name with the basedir mounted in the container
        for FILE in {all_files}; do
          files_to_scan+=( "/files/${FILE}" )
        done

        "$command" run -v ${PWD}:/files:ro --rm -i ghcr.io/tcort/markdown-link-check:stable -c /files/.markdown-link-checker-config.json -q "${files_to_scan[@]}"

    run-terraform-tests:
      files: git --no-pager diff --name-only HEAD
      glob: "terraform/modules/*/*"
      run: |
        modified_files=()

        for FILE in {files}; do
          modified_files+=( "$FILE" )
        done

        # Get unique modules that have been modified
        IFS=$'\n' modules_to_test=$(sort <<< "${modified_files[*]}" | cut -d'/' -f1-3 | uniq)
        unset IFS

        # For each module, run the terraform command to run the tests
        for module in $modules_to_test; do
          echo "Testing $module"
          terraform -chdir="$module" init -upgrade > /dev/null
          if ! terraform -chdir="$module" test; then
            echo "Tests failed"
            exit 1
          fi
          echo ""
        done
